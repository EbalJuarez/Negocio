@using Negocio.Clases

@page "/alimento-editar/{codigo}"
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject NavigationManager NavigationManager
<PageTitle>Formularios</PageTitle>

<h1>Ingreso de productos</h1>

<EditForm Model="@producto" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container text-center">
        <div class="row">
            <div class="col">
                <label for="identifier">Nombre de producto: </label>
                <InputText id="identifier" class="form-control" @bind-Value="producto.nombre_producto" />
                <ValidationMessage For="() => producto.nombre_producto" />
            </div>
            <div class="col">
                <label for="identifier">Codigo:  </label>
                <InputText id="identifier" class="form-control" @bind-Value="producto.codigo" />
                <ValidationMessage For="() => producto.nombre_producto" />
            </div>
        </div>
        <p></p>
        <div class="row">

            <div class="col">
                <label for="identifier">Precio de compra: </label>
                <InputText id="identifier" class="form-control" @bind-Value="producto.precio_compra" />
                <ValidationMessage For="() => producto.precio_compra" />
            </div>
            <div class="col">
                <label for="identifier">Precion de venta: </label>
                <InputText id="identifier" class="form-control" @bind-Value="producto.precio_venta" />
                <ValidationMessage For="() => producto.precio_compra" />
            </div>
            <div class="col">
                <label for="identifier">Unidad de medida: </label>
                <InputText id="identifier" class="form-control" @bind-Value="producto.unidad_medida" />
                <ValidationMessage For="() => producto.unidad_medida" />
            </div>
        </div>
        <div class="row">

            <div class="row mt-3">
                <div class="col-4">
                    <label for="productionDate">Fecha de vencimiento: </label>
                    <InputDate id="productionDate" class="form-control" @bind-Value="producto.fecha_vencimieto" />
                    <ValidationMessage For="() => producto.fecha_vencimieto" />
                </div>
            </div>
            <div class="col">
                <label for="description">Descripcion:  </label>
                <InputTextArea id="description" class="form-control" @bind-Value="producto.descripcion" />
            </div>
        </div>
        <p></p>

        <p></p>
        <div class="row mt-3 text-center">
            <div class="col">
                <button class="btn btn-dark" type="submit">Registrar alimento</button>
            </div>
        </div>
    </div>

</EditForm>
@code {
    [Parameter]
    public string? codigo { get; set; }
    private Alimento producto = new Alimento();
    private List<Alimento> Lista_Productos = new List<Alimento>();

    private void Guardar()
    {
        localStorage.SetItem("Registro_Productos", Lista_Productos);
        NavigationManager.NavigateTo("/weather");
    }


    protected override async Task OnInitializedAsync()
    {
        // Recuperar la lista de starships desde LocalStorage a una variable var
        var savedStarships = localStorage.GetItem<List<Alimento>>("Registro_Productos");

        // Validar si la lista fue recuperada correctamente, copiarla a la lista
        if (savedStarships != null)
        {
            Lista_Productos = savedStarships;
            producto = Lista_Productos.FirstOrDefault(a => a.codigo == codigo);
        }
    }
}   